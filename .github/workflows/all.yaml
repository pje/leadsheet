name: All

on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: denoland/setup-deno@v2.0.0
        with:
          deno-version: v2.x
      - id: restore-cache
        uses: actions/cache/restore@v3
        with:
          path: |
            ~/.deno
            ~/.cache/deno
            node_modules
          key: ${{ runner.os }}-npm-${{ hashFiles('package-lock.json') }}-deno-${{ hashFiles('deno.lock') }}
      - id: build
        run: make build
      - id: save-cache
        uses: actions/cache/save@v3
        with:
          path: |
            ~/.deno
            ~/.cache/deno
            node_modules
          key: ${{ steps.restore-cache.outputs.cache-primary-key }}
      - id: fmt-check
        run: make fmt-check
      - name: lint
        run: make lint
      - name: test
        run: make test
      - name: configure-pages
        uses: actions/configure-pages@v4
      - name: upload-pages-artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: 'build'

  deploy:
    runs-on: ubuntu-latest
    needs: build
    concurrency:
      group: "pages"
      cancel-in-progress: false
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
